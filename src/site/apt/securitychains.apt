Security Chains

	Everybody knows them, everybody hates them: Security Chains. 
	
	There are multiple ways how to create a security chain, for example by last trading date, by roll date, by open interest. 
	To make things flexible and easy, ActiveQuant has a base class SecurityChain, from which custom chain classes can be derived. 
	
	One non-abstract extension of a security chain class is SecurityChainByDate. 
	
	Of course it is still up to you to construct these chains, but the handling is already much easier. 
	
	Let the following snipplet of real source code inspire you, to understand how to construct security chains by date. 
	
+-----+
// let's assume you have plenty of instruments, but these are not yet linked together. 
String[] ids2 = idao.searchById("FUT.EUR.GX%", 10000);

// now, let's construct a security chain by date. 
SecurityChainByDate sc2 = new SecurityChainByDate();
sc2.setChainName("TheDaxFutures");

// now we load all the futures and add them one after the other. 
// Note: the chain does sort automatically by date. 
for (String id : ids2) {
	Future f = (Future) idao.load(id);
	sc2.add(id, f.getRollDate());
}

// save it. 
secChainDao.update(sc2);
+-----+

	Of course you can implement your own chains. Storing other chains is transparent, as long as they extend 
	SecurityChain and as long as you store them through the ISecurityChainDao. 