Cunningham Trade Systems T4 

	For users of the excellent and fair priced CTS T4 API, we offer a very comprehensive connector. 
	Why would you want to pay 2k USD a month for a high-end solution, if your trading is in the region of 
	a dozen of trades a day? CTS T4 offers you superior support at a great price. Combine it with our AQ2o. 
	
	Our connector allows you to record live market data, to  send, update and cancel orders across various
	accounts. Portfolio information is readily available. Why not creating your own GUI to reflect your 
	personal trading needs? 
	
	This connector is available through as a commercial license from us for a fair one-time sum.  	
	
	Contact {{{mailto:ustaudinger@activequant.com}Ulrich}} for more information. 
	
Communication protocol and configuration 

	Our relay uses a very simple communication protocol, suitable not only for Java apps, but also for Python and
	other languages. 
	
	An example of such a communication session is shown next. Quotes and ticks arrived after sending an initial session identifier. 
	
+-------------+	
ustaudinger@sniardwy:~$ telnet 192.168.0.160 22225
Trying 192.168.0.160...
Connected to 192.168.0.160.
Escape character is '^]'.
ULRICH
Welcome ULRICH. May the market be against you.
Q;1345586663153000000;D_D_I_20121200,D_D,USD,CTS;9986;1985.00;9987;2275.00;D_D_I_20121200;
Q;1345586663715030000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75596.00;D_D_I_20120900;
Q;1345586664776090000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75596.00;D_D_I_20120900;
Q;1345586665588140000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75611.00;D_D_I_20120900;
Q;1345586665838160000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75611.00;D_D_I_20120900;
Q;1345586666586200000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75623.00;D_D_I_20120900;
Q;1345586666898220000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75623.00;D_D_I_20120900;
Q;1345586667959280000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75623.00;D_D_I_20120900;
Q;1345586669019340000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75623.00;D_D_I_20120900;
T;1345586669144340000;D_D_I_20120900,D_D,USD,CTS;10000;4.00;D_D_I_20120900;
Q;1345586669144340000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75619.00;D_D_I_20120900;
Q;1345586670081400000;D_D_I_20120900,D_D,USD,CTS;9999;32776.00;10000;75619.00;D_D_I_20120900;
Q;1345586670828440000;D_D_I_20130300,D_D,USD,CTS;10008;122.00;10009;851.00;D_D_I_20130300;
Q;1345586670829440000;D_D_I_20121200,D_D,USD,CTS;9986;1985.00;9987;2275.00;D_D_I_20121200;
Connection closed by foreign host.
ustaudinger@sniardwy:~$	
+-------------+	
	
	
* Application configuration

+---------+	 
Put your configuration details  into a file called “config.properties”, for example: 
T4APIKey=43E.......... 
T4APPName=..........
T4Username=<your usrname>
T4Password=<your pwd>
T4Broker=CTS
T4Url=http://cts.sim.t4login.com
T4ServerType=SIMULATION
+---------+


* Messages

** Order fill:
 
+---------+
message = "OP;"+ioid+";OF;"+poTrade.Volume+";"+poTrade.Ticks;
+---------+		

** Order added notification at exchange:

+---------+
message = "OP;"+ioid+";OAE;";
+---------+

** order removed/cancelled notification:

+---------+
message = "OP;"+ioid+";OC;";
+---------+

** order updated confirmation:

+---------+ 
message = "OP;"+ioid+";OU;"+orderChange;
+---------+

** position update: 

+---------+
text2 = "PU;"+position.AccountID+";"+position.MarketID+";"+position.PL+";"+pos+";";
+---------+

** account updated message: 
message = "AU;"+account.Description; 


** Ticks

+---------+ 
string line = "T;"; 
line+=getTimeStampstring()+";"+assetId+";";			
string subline = market.ConvertTicksToRealDecimal(ticks, false)+";";
subline +=volume.ToString("f")+";";					
subline = subline.Replace(",", ".");
line = line+subline;
line+=market.MarketID+";";
+---------+


** Quotes: 

+---------+
string line = "Q;";
line += getTimeStampstring() + ";" + assetId+";";
			if(bids.Count > 0)
			{
				T4.API.Market.Depth.DepthItem myBid = bids[0];
				string myBidQuotePart = "";
				myBidQuotePart+=market.ConvertTicksToRealDecimal(myBid.Ticks, false)+";";
				myBidQuotePart+=myBid.Volume.ToString("f")+";";					
				myBidQuotePart = myBidQuotePart.Replace(",", ".");
				line += myBidQuotePart; 
			}
			else {
				line +=";;;";
			}
			if(asks.Count > 0)
			{	
				T4.API.Market.Depth.DepthItem myAsk = asks[0];
				string myQuotePart = "";
				myQuotePart+=market.ConvertTicksToRealDecimal(myAsk.Ticks, false)+";";
				myQuotePart+=myAsk.Volume.ToString("f")+";";						myQuotePart = myQuotePart.Replace(",", ".");							line+= myQuotePart;	
			}
			else {				
				line +=";;;";
			}
			line+=market.MarketID+";";
			return line;
+---------+


** Placing orders , updating and cancelling orders, see tcpserver.cs

+---------+ 
string[] cmds = message.Split(';');
string mainCmd = cmds[0];
string ioid = cmds[1];
string minorCmd = cmds[2];
if(mainCmd.Equals("OP")){
	if(minorCmd.Equals("CO"))
	{
		orderApi.cancelOrder(ioid);
	}
	else if (minorCmd.Equals("PO"))
	{
		Console.WriteLine("PO detected.");
		// place order
		string marketId = cmds[3];
		string buySell = cmds[4];
		Console.WriteLine(message);
		Console.WriteLine(buySell);
		Console.WriteLine(marketId);
		
		string priceType = cmds[5];
		string timeType = cmds[6];
		string orderVol = cmds[7];
		string limitTicks = cmds[8];
		string stopLimit = cmds[9];
		bool stopLimitFlag = false;
		if(stopLimit=="1")stopLimitFlag = true; 					
		// 
		if(buySell.Equals("BUY"))
		{
			addToLog("Sending buy order: " + priceType + ", " + timeType + ", " + orderVol + ", " +  limitTicks + ", " + stopLimitFlag);
			orderApi.buyOrder(ioid, marketId, (int)double.Parse(limitTicks), (int)double.Parse(orderVol), stopLimitFlag);
		}
		else if(buySell.Equals("SELL"))
		{
									addToLog("Sending sell order: " + priceType + ", " + timeType + ", " + orderVol + ", " +  limitTicks + ", " + stopLimitFlag);
			orderApi.sellOrder(ioid, marketId, (int)double.Parse(limitTicks), (int)double.Parse(orderVol), stopLimitFlag);
		}
	}
	else if (minorCmd.Equals("UO"))
	{
		// update order
		addToLog("Updating order ...");
		string newVolume = cmds[3];
		string newLimitTicks = cmds[4];
		
		orderApi.updateOrder(ioid, (int)double.Parse(newLimitTicks),(int)double.Parse(newVolume));
	}
+---------+
				