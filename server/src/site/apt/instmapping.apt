Instrument Mapping

	AQ2o distinguishes between Instrument (IDs), MarketDataInstrument (IDs) and TradeableInstrument (IDs).
	These three main types, without their extensions (f.e. Future extends Instrument), are separate and standalone 
	entities. In order to make a link between these three types, they have to be mapped to each other. 
	
	Let's make an example scenario. 
	
	Let's assume you have a list of Bloomberg Market Data Instrument IDs. You want to download the reference data 
	these MDIs. But MDIs know nothing about Instrument specific attributes! To link these, a mapper has to make the match 
	and updates the MDI instance with the Instrument instance ID. In our example, we would have an Instrument DAX Future 
	expiring Dec 2012. In the Bloomberg connector, we don't know about the Instrument, but about the BB market data instrument id, 
	which is <GXZ2 Index>. The BB connector downloads plenty of reference data for this BB instrument, pushes it over the wire to 
	some data consuming sink. The data consuming sink stores the data in a new instrument, or updates the existing instrument. 
	In this scenario, the mapping is done by the data consuming sink, as it would update the MDI with the newly created Instrument ID. 
	
	Another scenario is the importing of market data from a CSV file. This CSV file contains plenty of tick or other data, but no 
	reference data information. Let's assume, the CSV file is called "QQQQ.csv". The importer interprets this as an MDI <QQQQ> and 
	creates an MDI, if not present, for this instrument with the data provider name that you specified (say, Sungard). But it will not
	create a link between this MDI ID and the corresponding Instrument - which is the purpose of a separate mapping process. 
	
	
Implementation

	The class Mdi2InstrumentMapper reads a configuration file that contains all known mappers. It will process all MDIs and will call the 
	different Mapper's map functions. The mappers have to implement interpretation mechanisms on how to create that link. 	   